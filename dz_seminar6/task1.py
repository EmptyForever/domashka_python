# 6.1[30]: Напишите программу, генерирующую элементы арифметической прогрессии
# Программа принимает от пользователя три числа :

# Первый элемент прогрессии, Разность (шаг) и Количество элементов
# Формула для получения n-го члена прогрессии: an = a1 + (n-1) * d.

# Напишите функцию

# - Аргументы: три указанных параметра
# - Возвращает: список элементов арифмитической прогрессии.

# Примеры/Тесты:

# Ввод: 7 2 5
# Вывод: [7 9 11 13 15]
# Ввод: 2 3 12
# Вывод: [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35]
# (*) Усложнение. Для формирования списка внутри функции используйте Comprehension

# (**) Усложнение. Присвоение значений переменным a1,d,n запишите, используя только один input, в одну строку, вам понадобится распаковка и Comprehension или map

# декомпозиция
# Написать программу, решить через функцию
# 1. создать функцию принимающую три аргумента 1. первыйэлемент 2. шаг прогрессии 3. кол-во элементов, которое нужно вывести
# 2. создаём пустой список
# 3. наполняем список последовательно. первывый элемент (0индекс) равен начальному значению
#    последующие значения находятся по формуле i*d + a0
# для вывода будем использовать цикл. for i in range(5):
#                                          list.append()


def arifmetick_progress(start, step, count):
    # через обычный чикл
    # list_10901 = []
    # for i in range(1, count):
    #     list_10901.append(i*step + start)
    # List comprehension
    # нам не нужно в отдельной строке создавать создавать список. Экономия куча строк кода
    list_10901 = [(i*step + start) for i in range(count)]
    return list_10901

print(arifmetick_progress(7, 2, 5))

first, size, count1 = map(int, input("start, step, count: ").split())

print(arifmetick_progress(first, size, count1))
